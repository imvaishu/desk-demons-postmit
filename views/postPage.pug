doctype html
head
  meta(charset='UTF-8')
  meta(name='viewport' content='width=device-width, initial-scale=1.0')
  link(rel='stylesheet' href='/styles/styles.css' type='text/css')
  link(rel='stylesheet' href='/styles/deletePopUp.css' type='text/css')
  link(href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.1/css/all.min.css' rel='stylesheet')
  script(src="/js/popup.js")
  script(src="/js/request.js")
  script(src="/js/index.js")
  title Postmit
.menu
  div
    .app-name POSTMIT
    .pages
      a.page(href='/home') Home
      a.page(href=`/user/${loggedUser}`) Profile
      a.page(href=`/user/bookmarks`) Bookmarks
      button.popup-post-btn(onclick='showNewPostElement()') Post
      a.page(href='/logout') Logout
.root
  .main-panel
    .header
      span Post
    .feed
        .card
            .post(ondblclick=`displayHeart(${post.postId})` id=`post_${post.postId}`)
             .delete
               if post.isDeletable
                 i(class="fas fa-trash" onclick=`showDeletePopUp(${post.postId}, true)`)
             .flex
               .profile-pic
                 span= post.initials
               .user-details
                 .name
                   a(href=`/user/${post.username}`)= post.name 
                   span(class="timestamp")= ` ãƒ» ${post.postedAt}`
                 .username
                    a(href=`/user/${post.username}`)= `@${post.username}`
             .post-content
                    each line in post.message.split(/\n/)
                      - let urlRegEx= /(https?:\/\/[^\s]+)/g;
                      - let replacedLine= line.replace(/</g,'&lt;').replace(/>/g,'&gt;')
                      - replacedLine= post.mentions.reduce((line,user) => line.replace(new RegExp(user),`<a class="mention" href="/user/${user.slice(1)}">${user}</a>`),replacedLine) 
                      - replacedLine= post.hashtags.reduce((line,hashtag) => line.replace(new RegExp(`#${hashtag}`),`<a class="mention" href="/hashtag/${hashtag}">#${hashtag}</a>`),replacedLine) 
                      - replacedLine= replacedLine.replace(urlRegEx,(url)=>`<a class="mention" href="${url}">${url}</a>`)
                      != replacedLine
                      br
             - let likeCount=post.likedUsers.length
             a(href=`/post/${post.postId}/likes` class=`link ${post.likeCount>0?"likeDetails":"hideCount"}`) 
                span(class="likeCount")= likeCount
                span= `${post.likeCount>1 ? 'Likes':'Like'}`
             .actions.flex
               .action.like
                 - let className="far fa-heart icon";
                 if isLiked
                  - className="fas fa-heart icon likeColor"
                 i(class=className onclick=`toggleLikeUnlike(${post.postId})` id=`like_${post.postId}`) 
               .action.respond
                  i(class="far fa-comment icon")
                  span.count= post.responseCount? post.responseCount: ''
               .action.bookmark
                  - className="far fa-bookmark icon";
                  if isBookmarked
                   - className="fas fa-bookmark icon bookmarkColor"
                  i(class=className onclick=`toggleBookmark(${post.postId})` id=`bookmark_${post.postId}`) 
            i(class='fas fa-heart fa-3x instagramLike' id=`heart_${post.postId}` ondblclick=`displayHeart(${post.postId})`) 
    .heading 
      span Responses
    .posts#posts
      include components/post.pug
      each item in responses 
        +post(item)
  .search-panel
    .search-bar.flex
      .search-icon
        img(src='/assets/search.svg' alt='Search')
      .search-input(onkeyup='search()')
       input(type='text' placeholder='Search')
    .search-output

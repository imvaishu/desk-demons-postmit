doctype html
head
  meta(charset='UTF-8')
  meta(name='viewport' content='width=device-width, initial-scale=1.0')
  link(rel='stylesheet' href='/css/layout.css' type='text/css')
  link(rel='stylesheet' href='/css/menu-bar.css' type='text/css')
  link(rel='stylesheet' href='/css/search-panel.css' type='text/css')
  link(rel='stylesheet' href='/css/post.css' type='text/css')
  link(href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.1/css/all.min.css' rel='stylesheet')
  script(src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.20.1/moment.min.js")
  script(src="/js/request.js")
  script(src="/js/popup.js")
  script(src="/js/post.js")
  script(src="/js/search.js")
  title Postmit
body
  include components/menubar.pug
  .main-panel
    .header
      span Post
    .feed
      .post(id=`post-${post.postId}`  onclick=`expandPost(${post.postId})`)
        if post.repostedBy
         - let name = post.repostedBy===loggedUser ? 'me' : post.repostedBy;
         .row
           .username!= `Reposted by <a class="link" href="/user/${name}">@${name}</a>`
        .row
          .user-info
            .profile-pic
              if post.imageUrl
                img(src=post.imageUrl)
              else 
                span.center= post.initials
            .user-details
              .name
                a.link(href=`/user/${post.username}`)= post.name 
                a(class="timestamp" data-time=post.postedAt)= ` ãƒ» ${post.postedAt}`
              .username
                a.link(href=`/user/${post.username}`)= `@${post.username}`
          if post.isDeletable
            .icon(onclick=`showDeletePostPopup(${post.postId})`)
              i.fas.fa-trash.highlight-red
        if post.replyingTo&&post.replyingTo!=post.username
          .row
            .username!= `Replying to <a class="link" href="/user/${post.replyingTo}">@${post.replyingTo}</a>`
        .row
          .content
            each line in post.message.split(/\n/)
              - let urlRegEx= /(https?:\/\/[^\s]+)/g;
              - let replacedLine= line.replace(/</g,'&lt;').replace(/>/g,'&gt;')
              - replacedLine= post.mentions.reduce((line,user) => line.replace(new RegExp(`@\\b${user}\\b`),`<a class="highlight-link" href="/user/${user}">@${user}</a>`),replacedLine) 
              - replacedLine= post.hashtags.reduce((line,hashtag) => line.replace(new RegExp(`#\\b${hashtag}\\b`),`<a class="highlight-link" href="/hashtag/${hashtag}">#${hashtag}</a>`),replacedLine) 
              - replacedLine= replacedLine.replace(urlRegEx,(url)=>`<a class="highlight-link" href="${url}">${url}</a>`)
              != replacedLine
              br
        .row
          - let likeCount=post.likedUsers.length
          a.link(href=`/post/${post.postId}/likes` class=`count ${likeCount > 0 ? '' : 'hide-count'}`) 
            span= likeCount
            span= `${likeCount>1 ? ' Likes':' Like'}`
        .row.actions
          .action.icon.highlight-blue(onClick=`replyToPost(${post.postId})`)
            i.far.fa-comment
          div(class=`action icon ${post.isLiked ? 'fill-red' : 'highlight-red'}` onclick=`toggleLikeUnlike(${post.postId})`)
            i(class=`${post.isLiked ? 'fas' : 'far'} fa-heart`)
          div(class=`action icon highlight-blue` onclick=`toggleRepost(${post.postId})`)
            i(class="fas fa-retweet")
            span(class=`count ${post.repostCount ? '' : 'hide-count'}`)= post.repostCount
          div(class=`action icon ${post.isBookmarked ? 'fill-blue' : 'highlight-blue'}` onclick=`toggleBookmark(${post.postId})`)
            i(class=`${post.isBookmarked ? 'fas' : 'far'} fa-bookmark`)
    .header
      span Responses
    .posts
      include components/post.pug
      each item in responses 
        +post(item)
  include components/searchPanel.pug
script(src="/js/time.js")
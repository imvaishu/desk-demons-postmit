mixin post(post)
  .post(onclick=`expandPost(${post.postId})`)
    .row
      .user-info
        .profile-pic
          span.center= post.initials
        .user-details
          .name
            a(href=`/user/${post.username}`)= post.name 
            a(class="timestamp")= ` ãƒ» ${post.postedAt}`
          .username
            a(href=`/user/${post.username}`)= `@${post.username}`
      if post.isDeletable
        .icon(onclick=`showDeletePostPopup(${post.postId})`)
          i.fas.fa-trash.highlight-red
    .row
      .content
        each line in post.message.split(/\n/)
          - let urlRegEx= /(https?:\/\/[^\s]+)/g;
          - let replacedLine= line.replace(/</g,'&lt;').replace(/>/g,'&gt;')
          - replacedLine= post.mentions.reduce((line,user) => line.replace(new RegExp(user),`<a class="highlight-link" href="/user/${user.slice(1)}">${user}<a>`),replacedLine) 
          - replacedLine= post.hashtags.reduce((line,hashtag) => line.replace(new RegExp(`#${hashtag}`),`<a class="highlight-link" href="/hashtag/${hashtag}">#${hashtag}</a>`),replacedLine) 
          - replacedLine= replacedLine.replace(urlRegEx,(url)=>`<a class="highlight-link" href="${url}">${url}</a>`)
          != replacedLine
          br
    .row.actions
      .action.icon.highlight-blue(onClick=`replyToPost(${post.postId})`)
        i.far.fa-comment
        span(class=`count ${post.responseCount ? '' : 'hide-count'}`)= post.responseCount
      div(class=`action icon ${post.isLiked ? 'fill-red' : 'highlight-red'}` onclick=`toggleLikeUnlike(${post.postId})`)
        i(class=`${post.isLiked ? 'fas' : 'far'} fa-heart`)
        span(class=`count ${post.likedUsers.length ? '' : 'hide-count'}`)= post.likedUsers.length
      div(class=`action icon ${post.isBookmarked ? 'fill-blue' : 'highlight-blue'}` onclick=`toggleBookmark(${post.postId})`)
        i(class=`${post.isBookmarked ? 'fas' : 'far'} fa-bookmark`)